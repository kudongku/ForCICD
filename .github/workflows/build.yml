name: Build Docker Image

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  ECR_REGISTRY: 905418308591.dkr.ecr.ap-northeast-2.amazonaws.com # 레포 url (슬래시 뺴기)
  ECR_REPOSITORY: test-ecr # 레포 이름
  IMAGE_TAG: 0.1.0
  ECS_TASK_DEFINITION: tang-task-family
  CONTAINER_NAME: tang-container
  ECS_SERVICE: tang_service_app
  ECS_CLUSTER: tang-cluster

jobs:
  build:
    name: CICD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_KEY }}
          aws configure set region ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build docker image
        run: |
          docker build -t test-ecr .
          

      - name: push ECR
        id: build-image
        run: | # build docker image tag 이름이랑 맞추기
          docker tag test-ecr:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "image=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: definition ECS Task
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy ECS from task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true